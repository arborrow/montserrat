<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\SystemController
 */
class SystemControllerTest extends TestCase
{
    /**
     * @test
     */
    public function offeringdedup_index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = factory(\App\User::class)->create();

        $response = $this->actingAs($user)->get(route('offeringdedup'));

        $response->assertOk();
        $response->assertViewIs('offeringdedup.index');
        $response->assertViewHas('offeringdedup');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function offeringdedup_show_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = factory(\App\User::class)->create();

        $response = $this->actingAs($user)->get(route('offeringdedup.show', ['contact_id' => $contact_id, 'event_id' => $event_id]));

        $response->assertOk();
        $response->assertViewIs('offeringdedup.show');
        $response->assertViewHas('donations');
        $response->assertViewHas('combo');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function phpinfo_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = factory(\App\User::class)->create();

        $response = $this->actingAs($user)->get(route('phpinfo'));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    // test cases...
}
